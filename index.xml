<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Neil Spink</title><link>https://neilspink.ch/</link><description>Recent content on Neil Spink</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 07 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://neilspink.ch/index.xml" rel="self" type="application/rss+xml"/><item><title>100days.ink — A Commitment Engine</title><link>https://neilspink.ch/posts/2025-09-07-100days/</link><pubDate>Sun, 07 Sep 2025 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2025-09-07-100days/</guid><description>I’ve been building 100days.ink, a small app with a big purpose:
help people commit to something for 100 days and actually follow through.
The rules are simple:
Write down your 100-day commitment. Pick a start or end date. Decide if it’s private, public, or shared with the community. Put some skin in the game — tip from $2 to $147. That’s it. No feeds. No distractions. Just you versus the next 100 days.</description></item><item><title>AheadFork: Exploring Forks Ahead of Upstream</title><link>https://neilspink.ch/posts/2020-11-27-aheadfork/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2020-11-27-aheadfork/</guid><description>I wrote AheadFork, a small Python tool that helps explore GitHub forks that are ahead of their upstream repository—where contributors have built new code on top of existing projects. Using the GitHub REST API, it checks each fork of a given repo, compares its master branch against upstream, and reports how many commits it is ahead or behind, along with stars and last push date. This makes it easy to spot active forks that may contain interesting features, bug fixes, or experiments worth tracking.</description></item><item><title>Recaptures: a one‑minute screen capture journal (C#)</title><link>https://neilspink.ch/posts/2020-05-14-recaptures/</link><pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2020-05-14-recaptures/</guid><description>A tiny Windows utility that snapshots your screen every minute and ships it to storage—useful for a visual work log.</description></item><item><title>Tidbit: A Discord Bot That Searches Twitter</title><link>https://neilspink.ch/posts/2020-04-20-discord-bot/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2020-04-20-discord-bot/</guid><description>I built Tidbit, a lightweight Discord bot that listens for mentions and turns your words into smart Twitter searches. By pulling the ten longest words in a message, Tidbit queries Twitter (via the API) and replies with the most relevant tweet it finds—URLs stripped for clarity. The project is fully containerized with Docker, uses discord.js v14 and the twitter-api-v2 library, and is easily configurable through environment variables. Tidbit is released under the GNU General Public License v3 (GPL-3.</description></item><item><title>Building a Mood Barometer: The IoT Workshop at Swiss Re</title><link>https://neilspink.ch/posts/2020-02-16-iot/</link><pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2020-02-16-iot/</guid><description>Building a Mood Barometer: The IoT Workshop at Swiss Re n early 2020, I hosted a hands-on IoT workshop at Swiss Re. The challenge? Build a mood barometer — a physical dial that reflects the emotional &amp;ldquo;weather&amp;rdquo; of a space.
Each team flashed an ESP32, wrote Arduino code to read mood values over HTTP or MQTT, and moved a dial to match. No soldering — just ESP32 boards, stepper motors, and a magnet sensor wired up to detect calibration points.</description></item><item><title>Map the metadata of your YAML</title><link>https://neilspink.ch/posts/2019-12-31-yaml-dredger/</link><pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2019-12-31-yaml-dredger/</guid><description>yaml-dredger I thought it would be useful to analyze the structure of YAML files at scale.
YAML gets used for everything — APIs, configurations, Kubernetes, data specs — and often no one really knows what&amp;rsquo;s in the files. This script crawls a folder of YAML and gives you a kind of map: what entities exist, what fields they have, and where they show up.
It&amp;rsquo;s not pretty — but it works.</description></item><item><title>Subutai P2P Cloud + Minecraft Hosting</title><link>https://neilspink.ch/posts/2018-10-10-subutaiminecraft/</link><pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2018-10-10-subutaiminecraft/</guid><description>Why Subutai’s P2P cloud grabbed me and how I wrote a Minecraft hosting blueprint to be part of it.</description></item><item><title>Speed Comparison: Ember.js Client &amp; Server Heat Test</title><link>https://neilspink.ch/posts/2016-12-20-ember/</link><pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate><guid>https://neilspink.ch/posts/2016-12-20-ember/</guid><description>Late in 2016 I dove into Ember.js and JavaScript to build the Speed Comparison project—a fun tool that measures and visualizes website performance. The work was structured as eight weekly sprints, giving me a chance to iterate quickly, experiment with features, and learn by doing. The client is an Ember.js application with a responsive UI, while the server component collects and serves up the performance data. Together they form a simple but effective way to explore how different sites stack up in terms of speed.</description></item></channel></rss>